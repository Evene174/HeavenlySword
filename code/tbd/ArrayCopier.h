/***************************************************************************************************
*
*	DESCRIPTION		Copies one chunk of memory into another in various ways.
*
*	NOTES
*
***************************************************************************************************/

#ifndef ARRAYCOPIER_H_
#define ARRAYCOPIER_H_

//**************************************************************************************
//	Includes files.
//**************************************************************************************

//**************************************************************************************
//	Forward declarations.
//**************************************************************************************

//**************************************************************************************
//	Typedefs.
//**************************************************************************************

//**************************************************************************************
//	
//**************************************************************************************
template < typename type >
struct PlacementNewCopier
{
	static void copy( type *dest, const type *src, int count )
	{
		for ( int i=0;i<count;i++ )
		{
			NT_PLACEMENT_NEW ( dest + i ) type( src[ i ] );
		}
	}
};

//**************************************************************************************
//	
//**************************************************************************************
template < typename type >
struct MemcpyCopier
{
	static void copy( type *dest, const type *src, int count )
	{
		NT_MEMCPY( static_cast< void * >( dest ), static_cast< const void * >( src ), count*sizeof( type ) );
	}
};

#endif	// !ARRAYCOPIER_H_

