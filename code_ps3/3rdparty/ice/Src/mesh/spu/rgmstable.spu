/*
 * Copyright (c) 2003-2005 Naughty Dog, Inc. 
 * A Wholly Owned Subsidiary of Sony Computer Entertainment, Inc.
 * Use and distribution without consent strictly prohibited
 */
// This file is autogenerated!

// This is an 8x8x8 table such that table[64*H + 8*Y + X] contains the minimum
// possible width of a rectangle such that a sub-pixel sample is intersected,
// where H is the height of the rectangle, and X and Y are the sub-pixel
// coordinates of the rect's upper-left corner. H, X and Y range from 0 to 7.

// For performance reasons, every quadword worth of data in this table has been
// rotated to the right by three bytes, so that the following sequence puts
// table[i] in the preferred byte of temp:
//	lqx	temp, i, table
//	rotqbyi	temp, temp, i

// Sub-Pixel Sample Points:
// [1, 5]
// [3, 1]
// [5, 7]
// [7, 3]


m_rgmsLut:
.db	  6,  5,  4,255,255,255,255,255,255,255,255,  3,  2,  1,  0,  7
.db	  2,  1,  0,255,255,255,255,255,255,255,255,  7,  6,  5,  4,  3
.db	  4,  3,  2,255,255,255,255,255,255,255,255,  1,  0,  7,  6,  5
.db	  0,  7,  6,255,255,255,255,255,255,255,255,  5,  4,  3,  2,  1
.db	  6,  5,  4,  3,  2,  1,  0,  7,  6,  5,  4,  3,  2,  1,  0,  7
.db	  2,  1,  0,  7,  6,  5,  4,  3,  2,  1,  0,  7,  6,  5,  4,  3
.db	  4,  3,  2,  1,  0,  7,  6,  5,  4,  3,  2,  1,  0,  7,  6,  5
.db	  0,  7,  6,  5,  4,  3,  2,  1,  0,  7,  6,  5,  4,  3,  2,  1
.db	  2,  1,  0,  3,  2,  1,  0,  7,  6,  5,  4,  3,  2,  1,  0,  3
.db	  2,  1,  0,  7,  6,  5,  4,  3,  2,  1,  0,  1,  0,  5,  4,  3
.db	  0,  3,  2,  1,  0,  7,  6,  5,  4,  3,  2,  1,  0,  3,  2,  1
.db	  0,  5,  4,  5,  4,  3,  2,  1,  0,  7,  6,  3,  2,  1,  0,  1
.db	  2,  1,  0,  3,  2,  1,  0,  3,  2,  1,  0,  3,  2,  1,  0,  3
.db	  2,  1,  0,  1,  0,  5,  4,  3,  2,  1,  0,  1,  0,  5,  4,  3
.db	  0,  3,  2,  1,  0,  3,  2,  1,  0,  3,  2,  1,  0,  3,  2,  1
.db	  0,  5,  4,  3,  2,  1,  0,  1,  0,  5,  4,  3,  2,  1,  0,  1
.db	  2,  1,  0,  3,  2,  1,  0,  3,  2,  1,  0,  1,  0,  1,  0,  3
.db	  0,  1,  0,  1,  0,  5,  4,  3,  2,  1,  0,  1,  0,  3,  2,  1
.db	  0,  3,  2,  1,  0,  3,  2,  1,  0,  3,  2,  1,  0,  1,  0,  1
.db	  0,  1,  0,  3,  2,  1,  0,  1,  0,  5,  4,  3,  2,  1,  0,  1
.db	  2,  1,  0,  1,  0,  1,  0,  3,  2,  1,  0,  1,  0,  1,  0,  3
.db	  0,  1,  0,  1,  0,  3,  2,  1,  0,  1,  0,  1,  0,  3,  2,  1
.db	  0,  3,  2,  1,  0,  1,  0,  1,  0,  3,  2,  1,  0,  1,  0,  1
.db	  0,  1,  0,  3,  2,  1,  0,  1,  0,  1,  0,  3,  2,  1,  0,  1
.db	  0,  1,  0,  1,  0,  1,  0,  3,  2,  1,  0,  1,  0,  1,  0,  1
.db	  0,  1,  0,  1,  0,  3,  2,  1,  0,  1,  0,  1,  0,  1,  0,  1
.db	  0,  1,  0,  1,  0,  1,  0,  1,  0,  3,  2,  1,  0,  1,  0,  1
.db	  0,  1,  0,  3,  2,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1
.db	  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1
.db	  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1
.db	  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1
.db	  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1
