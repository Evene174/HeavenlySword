//--------------------------------------------------------------------------------------------------
/**
	@file		

	@brief		

	@note		(c) Copyright Sony Computer Entertainment 2005. All Rights Reserved.
**/
//--------------------------------------------------------------------------------------------------

#ifndef FP_LINE_SEGMENT_H
#define FP_LINE_SEGMENT_H

//--------------------------------------------------------------------------------------------------
//  INCLUDES
//--------------------------------------------------------------------------------------------------

#include	<Fw/FwMaths/FwVector.h>

//--------------------------------------------------------------------------------------------------
//  SWITCHES
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
//  MACRO DEFINITIONS
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
//  DECLARATIONS
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
//  CLASS DEFINITIONS
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
	@class			FpLineSegment

	@brief			Class describing a line segment (finite)
**/
//--------------------------------------------------------------------------------------------------

class FpLineSegment
{
public:

	// constructors
	FpLineSegment() {}
	FpLineSegment( const FpLineSegment& rhs );
	FpLineSegment( FwPoint_arg p0, FwPoint_arg p1 );

	// setting methods
	FpLineSegment&	operator = ( const FpLineSegment& rhs );
	void			Set( FwPoint_arg p0, FwPoint_arg p1 );
	void			SetPoint0( FwPoint_arg p );
	void			SetPoint1( FwPoint_arg p );

	// access
	const FwPoint&	GetPoint0() const;
	const FwPoint&	GetPoint1() const;

protected:

	FwPoint			m_point0;							//!< one end of the line segment
	FwPoint			m_point1;							//!< the other end of the line segment

};

//--------------------------------------------------------------------------------------------------
//  INLINE FUNCTION DEFINITIONS
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
	@brief			FpLineSegment constructor

	@param			rhs				-	
**/
//--------------------------------------------------------------------------------------------------

inline FpLineSegment::FpLineSegment( const FpLineSegment& rhs )
: m_point0( rhs.m_point0 )
, m_point1( rhs.m_point1 )
{
}

//--------------------------------------------------------------------------------------------------
/**
	@brief			FpLineSegment constructor

	@param			p0				-	
	@param			p1				-	
**/
//--------------------------------------------------------------------------------------------------

inline FpLineSegment::FpLineSegment( FwPoint_arg p0, FwPoint_arg p1 )
: m_point0( p0 )
, m_point1( p1 )
{
}

//--------------------------------------------------------------------------------------------------
/**
	@brief			

	@param			rhs				-	

	@return			
**/
//--------------------------------------------------------------------------------------------------

inline FpLineSegment&	FpLineSegment::operator = ( const FpLineSegment& rhs )
{
	m_point0 = rhs.m_point0;
	m_point1 = rhs.m_point1;
	return *this;
}

//--------------------------------------------------------------------------------------------------
/**
	@brief			

	@param			p0				-	
	@param			p1				-	
**/
//--------------------------------------------------------------------------------------------------

inline void			FpLineSegment::Set( FwPoint_arg p0, FwPoint_arg p1 )
{
	m_point0 = p0;
	m_point1 = p1;
}

//--------------------------------------------------------------------------------------------------
/**
	@brief			

	@param			p				-	
**/
//--------------------------------------------------------------------------------------------------

inline void			FpLineSegment::SetPoint0( FwPoint_arg p )
{
	m_point0 = p;
}

//--------------------------------------------------------------------------------------------------
/**
	@brief			

	@param			p				-	
**/
//--------------------------------------------------------------------------------------------------

inline void			FpLineSegment::SetPoint1( FwPoint_arg p )
{
	m_point1 = p;
}

//--------------------------------------------------------------------------------------------------
/**
	@brief			

	@return			
**/
//--------------------------------------------------------------------------------------------------

inline const FwPoint&	FpLineSegment::GetPoint0() const
{
	return m_point0;
}

//--------------------------------------------------------------------------------------------------
/**
	@brief			

	@return			
**/
//--------------------------------------------------------------------------------------------------

inline const FwPoint&	FpLineSegment::GetPoint1() const
{
	return m_point1;
}

#endif // FP_LINE_SEGMENT_H
